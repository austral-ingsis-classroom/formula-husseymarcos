@startuml

class MathEngine{
    Function function
    List<String> variables
    double evaluateFunction()
    void setFunction(Function function)
    String printFunction()
    List<String> collectVariablesRecursively(Function function)
}
MathEngine --> Function

interface Function{
    Double evaluate();
    String getString();
}


class Constant implements Function{
int value
Double evaluate();
    String getString();
}


class Variable implements Function{
String name
int value
Double evaluate();
    String getString();
}

class Division implements Function{
Function firstNum
Function secondNum

Double evaluate();
    String getString();
}

class Module implements Function{
Function expression
Double evaluate();
    String getString();
}

class Parenthesis implements Function{
Function expression
Double evaluate();
    String getString();
}

class Power implements Function{
Function firstNum
Function secondNum
Double evaluate();
    String getString();
}

class Product implements Function{
Function firstNum
Function secondNum
Double evaluate();
    String getString();
}

class Root implements Function{
Function expression
Double evaluate();
    String getString();
}

class Subtraction implements Function{
Function firstNum
Function secondNum
Double evaluate();
    String getString();
}

class Sum implements Function{
Function firstNum
Function secondNum
Double evaluate();
    String getString();
}



@enduml